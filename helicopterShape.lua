-- This file is for use with Corona Game Edition
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

module(...)

function physicsData(scale)
	local physics = { data =
	{ 
		
		["body"] = {
			
				{
					density = 100, 
					isSensor = true, 
					shape = {   1.80000019073486, 26.8999996185303  ,  0.300000190734863, 22.5  ,  1.5, 22.3000001907349  ,  6.39999961853027, 25.8000001907349  ,  6.39999961853027, 27.1999998092651  }
				}  ,
				{
					density = 100, 
					isSensor = true,
					shape = {   -3.5, 25.8999996185303  ,  0.300000190734863, 22.5  ,  1.80000019073486, 26.8999996185303  ,  0.300000190734863, 27.1000003814697  ,  -3.5, 27  }
				}  ,
				{
					density = 100, 				
					isSensor = true,
					shape = {   1.39999961853027, 1.09999847412109  ,  0.199999809265137, 1.29999923706055  ,  -4.40000009536743, -4.20000076293945  ,  -6.70000004768372, -9  ,  9.60000038146973, -16.5  ,  8.89999961853027, -11  ,  6.79999923706055, -3.59999847412109  }
				}  ,
				{
					density = 100, 
					isSensor = true,
					shape = {   1.80000019073486, -30.4000015258789  ,  5, -28.5999984741211  ,  7.5, -24.9000015258789  ,  9.60000038146973, -16.5  ,  -7.29999995231628, -15.0999984741211  ,  -6, -21.0999984741211  ,  -3.69999980926514, -25.7999992370605  ,  -0.600000381469727, -30.1999969482422  }
				}  ,
				{
					density = 100, 
					isSensor = true,
					shape = {   9.60000038146973, -16.5  ,  -6.70000004768372, -9  ,  -7.29999995231628, -15.0999984741211  }
				}  ,
				{
					density = 100, 
					isSensor = true,
					shape = {   0.300000190734863, 27.1000003814697  ,  1.80000019073486, 26.8999996185303  ,  1.69999980926514, 36.8999999761581  ,  0.399999618530273, 37  }
				}  ,
				{
					density = 100, 
					isSensor = true,
					shape = {   1.5, 22.3000001907349  ,  0.300000190734863, 22.5  ,  0.199999809265137, 1.29999923706055  ,  1.39999961853027, 1.09999847412109  }
				}  
		}
		
		, 
		["propeller"] = {
			
				{
					density = .10, 
					shape = {   3.69999980926514, 32.4000000953674  ,  0.800000190734863, 3.59999847412109  ,  2.30000019073486, 2.59999847412109  ,  8.70000076293945, 33.8000001907349  ,  5.39999961853027, 36.1000000238419  }
				}  ,
				{
					density = .10, 
					shape = {   -1, -4.20000076293945  ,  0.399999618530273, -5  ,  4, 0.0999984741210938  ,  2.30000019073486, 2.59999847412109  ,  0.800000190734863, 3.59999847412109  ,  -1.90000009536743, 0.900001525878906  }
				}  ,
				{
					density = .10, 
					shape = {   0.399999618530273, -5  ,  -1, -4.20000076293945  ,  -5.20000004768372, -35.1999969482422  ,  -0.399999618530273, -34.8000030517578  }
				}  
		}
		
	} }

	-- apply scale factor
	local s = scale or 1.0
	for bi,body in pairs(physics.data) do
		for fi,fixture in ipairs(body) do
			for ci,coordinate in ipairs(fixture.shape) do
				fixture.shape[ci] = s * coordinate
			end
		end
	end
	
	function physics:get(name)
		return unpack(self.data[name])
	end
	
	return physics;
end


